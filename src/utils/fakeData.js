import getLastWeek from './getLastWeek';
import { createUUID } from './generateUUID';
const fakeTaks = [
  'clicks-and-mortar',
  'value-added',
  'vertical',
  'proactive',
  'robust',
  'revolutionary',
  'scalable',
  'leading-edge',
  'innovative',
  'intuitive',
  'strategic',
  'e-business',
  'mission-critical',
  'sticky',
  'one-to-one',
  'end-to-end',
  'global',
  'granular',
  'frictionless',
  'virtual',
  'viral',
  'dynamic',
  'best-of-breed',
  'magnetic',
  'bleeding-edge',
  'web-enabled',
  'interactive',
  'dot-com',
  'back-end',
  'real-time',
  'efficient',
  'front-end',
  'distributed',
  'seamless',
  'extensible',
  'turn-key',
  'world-class',
  'open-source',
  'cross-platform',
  'cross-media',
  'synergistic',
  'bricks-and-clicks',
  'out-of-the-box',
  'enterprise',
  'integrated',
  'impactful',
  'wireless',
  'transparent',
  'next-generation',
  'cutting-edge',
  'user-centric',
  'visionary',
  'customized',
  'ubiquitous',
  'plug-and-play',
  'collaborative',
  'compelling',
  'holistic',
  'synergies',
  'web-readiness',
  'paradigms',
  'markets',
  'partnerships',
  'infrastructures',
  'platforms',
  'initiatives',
  'channels',
  'eyeballs',
  'communities',
  'solutions',
  'e-tailers',
  'e-services',
  'action-items',
  'portals',
  'niches',
  'technologies',
  'content',
  'vortals',
  'supply-chains',
  'convergence',
  'relationships',
  'architectures',
  'interfaces',
  'e-markets',
  'e-commerce',
  'systems',
  'bandwidth',
  'infomediaries',
  'mindshare',
  'deliverables',
  'users',
  'schemas',
  'networks',
  'applications',
  'metrics',
  'e-business',
  'functionalities',
  'experiences',
  'web services',
  'methodologies',
];

export default function fakeData() {
  const result = new Map();

  for (let i = 0; i < 50; i++) {
    const index = Math.floor(Math.random() * (100 - 0)) + 0;
    const duracion = Math.floor(Math.random() * (7200 - 1)) + 1;
    const minComplete = Math.floor((duracion / 100) * 80);
    const complete =
      Math.floor(Math.random() * (duracion + 1 - minComplete)) + minComplete;
    const indexDate = Math.floor(Math.random() * (6 - 0)) + 0;
    const date = getLastWeek()[indexDate];
    const id = createUUID();
    result.set(id, {
      id: id,
      text: fakeTaks[index],
      duracion: duracion,
      transcurrido: complete,
      dateComplete: date,
      isComplete: i > 5,
    });
  }

  return result;
}
